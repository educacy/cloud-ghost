generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id              String            @id
  name            String            @default("undefined")
  createdAt       DateTime          @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime          @default(now()) @db.Timestamptz(6)
  email           String            @unique
  sub             String?           @unique
  groupEditAccess groupEditAccess[]
  usersGroup      usersGroup[]
}

model groupEditAccess {
  id        String    @id @db.Uuid
  userId    String
  groupId   String
  value     String?
  createdAt DateTime? @default(now()) @db.Timestamptz(6)
  updatedAt DateTime? @default(now()) @db.Timestamptz(6)
  groups    groups    @relation(fields: [groupId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users     users     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model groups {
  id              String            @id
  name            String            @unique
  academicYear    String
  academicLevel   Int
  createdAt       DateTime          @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime          @default(now()) @db.Timestamptz(6)
  groupEditAccess groupEditAccess[]
  usersGroup      usersGroup[]
}

model usersGroup {
  id      String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId  String
  groupId String
  groups  groups @relation(fields: [groupId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users   users  @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
